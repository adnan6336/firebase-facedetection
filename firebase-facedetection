import os
import cv2
import keyboard
import time
import uuid
from google.cloud import storage
import firebase_admin
from firebase_admin import credentials
from firebase_admin import db


deviceName = 'User/111223'


def initAll():
    
    #face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
    #cap = cv2.VideoCapture("rtsp://admin:Orgosoft@123@192.168.15.90:554/cam/realmonitor?channel=1&subtype=0&unicast=true&proto=Onvif")
    cred = credentials.Certificate('infinitysecurity-2020-firebase-adminsdk-cyysy-2e4591469e.json')
    firebase_admin.initialize_app(cred, {
        'databaseURL': 'https://infinitysecurity-2020.firebaseio.com'
    })
    os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = 'infinitysecurity-2020-firebase-adminsdk-cyysy-2e4591469e.json'
    client = storage.Client()
    bucket = client.get_bucket('infinitysecurity-2020.appspot.com')
    
def alertUpdate(status):
    ref = db.reference(deviceName)
    users_ref = ref.child('Alert')
    users_ref.set({'status':status})

def picUpdate(count):
    picBlob = bucket.blob(str(uuid.uuid4())+'.jpg')
    picBlob.upload_from_filename(filename=str(count)+'.jpg')
    picBlob.make_public()
    global link
    link[count] = picBlob.public_url    
    
def linkUpdate():
    ref = db.reference(deviceName)
    users_ref = ref.child('Intruders')
    users_ref.push().set({'1':link[0],'2':link[1],'3':link[2]})    


isOkay = False
link = ['link1','link2','link3','link4']
count = 0
cred = credentials.Certificate('infinitysecurity-2020-firebase-adminsdk-cyysy-2e4591469e.json')
os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = 'infinitysecurity-2020-firebase-adminsdk-cyysy-2e4591469e.json'
firebase_admin.initialize_app(cred, {
        'databaseURL': 'https://infinitysecurity-2020.firebaseio.com'
    })


while(not isOkay):
    try:
        client = storage.Client()
        bucket = client.get_bucket('infinitysecurity-2020.appspot.com')
        isOkay = True

    except Exception as e:
        print(e)



    

while(True):
    try:            
        print('begin')
        while True:
            time.sleep(0.1)
            if keyboard.is_pressed('d'):
                print("enter")
                alertUpdate('1')
                #cap = cv2.VideoCapture("rtsp://admin:Orgosoft@123@192.168.15.90:554/cam/realmonitor?channel=1&subtype=0&unicast=true&proto=Onvif")
                face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
                cap = cv2.VideoCapture(0)
                count = 0
                
                while(count<3):
                    _, img = cap.read()
                    
                    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)        
                    faces = face_cascade.detectMultiScale(gray, 1.3, 5)
                    cv2.imshow('img', img)
                    
                    if(len(faces)>0):
                        
                        print(count)
                        print("FaceDetected")
                        for (x, y, w, h) in faces:
                            cv2.rectangle(img, (x, y), (x+w, y+h), (255, 0, 0), 2)
                        
                        #cv2.imshow('img', img)
                        scale_percent = 40 # percent of original size
                        width = int(img.shape[1] * scale_percent / 100)
                        height = int(img.shape[0] * scale_percent / 100)
                        dim = (width, height)
                        img = cv2.resize(img, dim, interpolation = cv2.INTER_AREA)
                        cv2.imwrite('D:\Shehryar Inifinity Security\\'+str(count)+'.jpg',img)
                        time.sleep(0.1)
                        picUpdate(count)
                        time.sleep(1)
                        count=count+1

                                            
                    k = cv2.waitKey(30) & 0xff

                count = 0                    
                print("exit")
                alertUpdate('0')
                linkUpdate()
                cv2.destroyAllWindows()
                cap.release()               
            
            
    except Exception as e:
        print(e)
        time.sleep(5)
    

